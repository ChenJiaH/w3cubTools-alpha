{"version":3,"file":"static/webpack/static/development/pages/long-weibo.js.ed73bbf50b201f50b87c.hot-update.js","sources":["webpack:///./pages/long-weibo.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Button, Pane, Dialog, Switch } from \"evergreen-ui\";\n\nlet ClassicEditor, CKEditor;\n\nif (__CLIENT__) {\n  ClassicEditor = _ckeditor_ckeditor5BuildClassic;\n  CKEditor = _ckeditor_ckeditor5React;\n}\nclass MyUploadAdapter {\n  loader: any;\n  constructor(loader) {\n    this.loader = loader;\n  }\n  upload() {\n    const loader = this.loader;\n    return loader.file;\n  }\n}\n\nfunction MyCustomUploadAdapterPlugin(editor) {\n  editor.plugins.get(\"FileRepository\").createUploadAdapter = loader => {\n    // Configure the URL to the upload script in your back-end here!\n    return new MyUploadAdapter(loader);\n  };\n}\n\nfunction toDataUrl(url, callback) {\n  var xhr = new XMLHttpRequest();\n  xhr.onload = function() {\n    callback(xhr.response);\n  };\n  xhr.open(\"GET\", url);\n  xhr.send();\n}\n\nconst proxyToDataUrl = (url, callback) => {\n  url = \"https://helloacm.com/api/image-to-base64/?url=\" + url;\n  return toDataUrl(url, callback);\n};\n\nconst doImages = () => {\n  var images = document\n    .querySelector(\".ck.ck-content\")\n    .getElementsByTagName(\"img\");\n  [].slice.call(images).forEach((item, _i) => {\n     item.removeAttribute('srcset');\n    if (/^(https?\\:)?\\/\\//.test(item.src)) {\n      proxyToDataUrl(item.src, url => {\n        item.src = url;\n      });\n    }\n  });\n};\n\nexport default function() {\n  const generateImage = () => {\n    var images = document\n      .querySelector(\".ck.ck-content\")\n      .getElementsByTagName(\"img\");\n    var imgs = [].slice.call(images).reduce((prev, item) => {\n      if (/^(https?\\:)?\\/\\//.test(item.src)) {\n        return prev + Number(true);\n      } else {\n        return prev;\n      }\n    }, 0);\n    if (imgs > 0) {\n      setLoading(true);\n      setTimeout(() => {\n        generateImage();\n      }, 300);\n      return;\n    } else {\n      setLoading(false);\n    }\n    let el = document.querySelector(\".ck.ck-content\");\n    var data = el.className;\n    el.className += \" html2canvasreset\";\n    if (!checked) {\n      let masker = document.createElement(\"div\");\n      masker.style.font = \"10px Comic Sans MS\";\n      masker.style.color = \"#efefef\";\n      masker.style.textAlign = \"right\";\n      masker.style.marginTop = \"20px\";\n      masker.innerHTML = \"Imaged by w3cubTools\";\n      el.appendChild(masker);\n    }\n    html2canvas(el, {\n      allowTaint: true,\n      allowedContent: true,\n      width: el.scrollWidth,\n      height: el.scrollHeight + 100\n    }).then(canvas => {\n      el.className = data; //old className - Jquery: $(target).removeClass(\"html2canvasreset\");\n      setOpen(true);\n      canvas.id = \"imgcanvas\";\n      let div = document.getElementById(\"cnavas\");\n      if (div) {\n        div.append(canvas);\n      }\n    });\n  };\n  const downloadImage = (event)=> {\n    let canvas = document.getElementById(\"imgcanvas\") as HTMLCanvasElement;\n    var imgUri = canvas.toDataURL();\n    event.currentTarget.href = imgUri;\n    event.currentTarget.setAttribute(\"download\", 'longweibo');\n  }\n  const [open, setOpen] = useState(false);\n  const [isLoading, setLoading] = useState(false);\n  const [checked, setChecked] = useState(false);\n  return (\n    <div className=\"box\" style={{ width: \"700px\", margin: \"auto\" }}>\n      <h1>长微博生成器</h1>\n      <Pane marginBottom={15} display=\"flex\">\n        <Button height={50} isLoading={isLoading} onClick={generateImage}>\n          Generate Image\n        </Button>\n        {/* <Pane display=\"flex\" marginLeft={20} >\n                   <span style={{lineHeight: '40px', marginRight: '10px'}}>Remove watermark</span>\n                   <Switch\n                    height={40}\n                    checked={checked}\n                    onChange={e => setChecked(e.target.checked)}\n                    />\n                </Pane> */}\n      </Pane>\n      <Dialog\n        isShown={open}\n        width={\"max-content\"}\n        topOffset=\"30px\"\n        title=\"Image results\"\n        onCloseComplete={() => setOpen(false)}\n        hasFooter={false}\n      >\n        <div>\n          <Button\n            is=\"a\"\n            className=\"save-btn\"\n            onClick={downloadImage}\n          >\n            Save as Image\n          </Button>\n          <div id=\"cnavas\"></div>\n        </div>\n      </Dialog>\n      <div style={{ minHeight: \"600px\" }}>\n        {__CLIENT__ && (\n          <CKEditor\n            editor={ClassicEditor}\n            id=\"editor_box\"\n            data=\"<div id='capture'>Welcome to Long Weibo Generator!</div>\"\n            config={{\n              toolbar: [\n                \"heading\",\n                \"|\",\n                \"bold\",\n                \"italic\",\n                \"link\",\n                \"bulletedList\",\n                \"numberedList\",\n                \"imageUpload\",\n                \"blockQuote\",\n                \"insertTable\",\n                \"undo\",\n                \"redo\"\n              ], // \"mediaEmbed\",\n              extraPlugins: [MyCustomUploadAdapterPlugin],\n              config: {\n                ui: {\n                  width: \"500px\",\n                  height: \"300px\"\n                }\n              }\n            }}\n            onInit={editor => {\n              // You can store the \"editor\" and use when it is needed.\n              console.log(\"Editor is ready to use!\", editor);\n            }}\n            onChange={(event, editor) => {\n              const data = editor.getData();\n              setTimeout(() => {\n                doImages();\n              }, 300);\n              console.log({ event, editor, data });\n            }}\n            onBlur={editor => {\n              console.log(\"Blur.\", editor);\n            }}\n            onFocus={editor => {\n              console.log(\"Focus.\", editor);\n            }}\n          />\n        )}\n      </div>\n\n      <style>{`\n                .html2canvasreset{\n                    overflow: visible !important;\n                    width: auto !important;\n                    height: auto !important;\n                    max-height: auto !important;\n                    border: 1px solid transparent!important;\n                }\n                .ck-editor__main > .ck-editor__editable {\n                    min-height: 500px;\n                }\n                `}</style>\n    </div>\n  );\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;;;AAAA;AACA;AACA;AACA;;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAtDA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAwDA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAaA;AACA;AACA;AACA;AACA;AACA;AAFA;AADA;AAhBA;AAuBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA3CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA;;;;A","sourceRoot":""}