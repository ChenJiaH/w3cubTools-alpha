{"version":3,"file":"static/webpack/static/development/pages/japanese-syllabary.js.0f161ca4be06106d15a9.hot-update.js","sources":["webpack:///./pages/japanese-syllabary.tsx"],"sourcesContent":["import React, { useReducer } from \"react\";\nimport { Pane, Tablist, Tab, Text } from \"evergreen-ui\";\nimport VoiceComponent from \"@components/icons/VoiceComponent\";\nexport default function() {\n  const [state, setState] = useReducer(\n    (state, action) => {\n      return {\n        ...state,\n        ...action\n      };\n    },\n    {\n      selectedIndex: 0,\n      tabs: [\"Hiragana\", \"Katakana\"],\n      Hiragana: [\n        [\n          [\"あ\", \"い\", \"う\", \"え\", \"お\"],\n          [\"か\", \"き\", \"く\", \"け\", \"こ\"],\n          [\"さ\", \"し\", \"す\", \"せ\", \"そ\"],\n          [\"た\", \"ち\", \"つ\", \"て\", \"と\"],\n          [\"な\", \"に\", \"ぬ\", \"ね\", \"の\"],\n          [\"は\", \"ひ\", \"ふ\", \"へ\", \"ほ\"],\n          [\"ま\", \"み\", \"む\", \"め\", \"も\"],\n          [\"や\", \"ゆ\", \"よ\"],\n          [\"ら\", \"り\", \"る\", \"れ\", \"ろ\"],\n          [\"わ\", \"を\"],\n          [\"ん\"]\n        ],\n        [\n          [\"が\", \"ぎ\", \"ぐ\", \"げ\", \"ご\"],\n          [\"ざ\", \"じ\", \"ず\", \"ぜ\", \"ぞ\"],\n          [\"だ\", \"ぢ\", \"づ\", \"で\", \"ど\"],\n          [\"ば\", \"び\", \"ぶ\", \"べ\", \"ぼ\"],\n          [\"ぱ\", \"ぴ\", \"ぷ\", \"ぺ\", \"ぽ\"],\n          [\"きゃ\", \"きゅ\", \"きょ\"],\n          [\"しゃ\", \"しゅ\", \"しょ\"],\n          [\"ちゃ\", \"ちゅ\", \"ちょ\"],\n          [\"にゃ\", \"にゅ\", \"にょ\"],\n          [\"ひゃ\", \"ひゅ\", \"ひょ\"],\n          [\"みゃ\", \"みゅ\", \"みょ\"],\n          [\"りゃ\", \"りゅ\", \"りょ\"],\n          [\"ぎゃ\", \"ぎゅ\", \"ぎょ\"],\n          [\"じゃ\", \"じゅ\", \"じょ\"],\n          [\"びゃ\", \"びゅ\", \"びょ\"],\n          [\"ぴゃ\", \"ぴゅ\", \"ぴょ\"]\n        ]\n      ],\n      Katakana: [\n        [\n          [\"ア\", \"イ\", \"ウ\", \"エ\", \"オ\"],\n          [\"カ\", \"キ\", \"ク\", \"ケ\", \"コ\"],\n          [\"サ\", \"シ\", \"ス\", \"セ\", \"ソ\"],\n          [\"タ\", \"チ\", \"ツ\", \"テ\", \"ト\"],\n          [\"ナ\", \"ニ\", \"ヌ\", \"ネ\", \"ノ\"],\n          [\"ハ\", \"ヒ\", \"フ\", \"ヘ\", \"ホ\"],\n          [\"マ\", \"ミ\", \"ム\", \"メ\", \"モ\"],\n          [\"ヤ\", \"ユ\", \"ヨ\"],\n          [\"ラ\", \"リ\", \"ル\", \"レ\", \"ロ\"],\n          [\"ワ\", \"ヲ\"],\n          [\"ン\"]\n        ],\n        [\n          [\"ガ\", \"ギ\", \"グ\", \"ゲ\", \"ゴ\"],\n          [\"ザ\", \"ジ\", \"ズ\", \"ゼ\", \"ゾ\"],\n          [\"ダ\", \"ヂ\", \"ヅ\", \"デ\", \"ド\"],\n          [\"バ\", \"ビ\", \"ブ\", \"ベ\", \"ボ\"],\n          [\"パ\", \"ピ\", \"プ\", \"ペ\", \"ポ\"],\n          [\"キャ\", \"キュ\", \"キョ\"],\n          [\"シャ\", \"シュ\", \"ショ\"],\n          [\"チャ\", \"チュ\", \"チョ\"],\n          [\"ニャ\", \"ニュ\", \"ニョ\"],\n          [\"ヒャ\", \"ヒュ\", \"ヒョ\"],\n          [\"ミャ\", \"ミュ\", \"ミョ\"],\n          [\"リャ\", \"リュ\", \"リョ\"],\n          [\"ギャ\", \"ギュ\", \"ギョ\"],\n          [\"ジャ\", \"ジュ\", \"ジョ\"],\n          [\"ビャ\", \"ビュ\", \"ビョ\"],\n          [\"ピャ\", \"ピュ\", \"ピョ\"]\n        ]\n      ],\n      yin: [\n        [\n          [\"a\", \"i\", \"u\", \"e\", \"o\"],\n          [\"ka\", \"ki\", \"ku\", \"ke\", \"ko\"],\n          [\"sa\", \"shi\", \"su\", \"se\", \"so\"],\n          [\"ta\", \"chi\", \"tsu\", \"te\", \"to\"],\n          [\"na\", \"ni\", \"nu\", \"ne\", \"no\"],\n          [\"ha\", \"hi\", \"fu\", \"he\", \"ho\"],\n          [\"ma\", \"mi\", \"mu\", \"me\", \"mo\"],\n          [\"ya\", \"yu\", \"yo\"],\n          [\"ra\", \"ri\", \"ru\", \"re\", \"ro\"],\n          [\"wa\", \"o\"],\n          [\"n\"]\n        ],\n        [\n          [\"ga\", \"gi\", \"gu\", \"ge\", \"go\"],\n          [\"za\", \"ji\", \"zu\", \"ze\", \"zo\"],\n          [\"da\", \"ji\", \"zu\", \"de\", \"do\"],\n          [\"ba\", \"bi\", \"bu\", \"be\", \"bo\"],\n          [\"pa\", \"pi\", \"pu\", \"pe\", \"po\"],\n          [\"kya\", \"kyu\", \"kyo\"],\n          [\"sha\", \"shu\", \"sho\"],\n          [\"cha\", \"chu\", \"cho\"],\n          [\"nya\", \"nyu\", \"nyo\"],\n          [\"hya\", \"hyu\", \"hyo\"],\n          [\"mya\", \"myu\", \"myo\"],\n          [\"rya\", \"ryu\", \"ryo\"],\n          [\"gya\", \"gyu\", \"gyo\"],\n          [\"ja\", \"ju\", \"jo\"],\n          [\"bya\", \"byu\", \"byo\"],\n          [\"pya\", \"pyu\", \"pyo\"]\n        ]\n      ]\n    }\n  );\n  const cardClick = (yin, _word) => {\n    var n = (document.getElementById(\"au-\" + yin) ||\n      document.createElement(\"audio\")) as HTMLAudioElement;\n    n.id = \"au-\" + yin;\n    document.body.appendChild(n);\n    if (yin.length == 1) {\n      yin = yin + yin;\n    }\n    n.src = `https://raw.githubusercontent.com/icai/tts-japanese/master/dist/${yin}.mp3`;\n    n.loop = false;\n    n.play();\n  };\n  const preloadVoice = (yin, _word) => {\n    var n = (document.getElementById(\"au-\" + yin) ||\n      document.createElement(\"audio\")) as HTMLAudioElement;\n    n.id = \"au-\" + yin;\n    document.body.appendChild(n);\n    if (yin.length == 1) {\n      yin = yin + yin;\n    }\n    n.src = `https://raw.githubusercontent.com/icai/tts-japanese/master/dist/${yin}.mp3`;\n    n.style.display = \"none\";\n  };\n  const cc = line => {\n    return line.length == 1 ? { justifyContent: \"flex-end\" } : {};\n  };\n  return (\n    <Pane width=\"800px\" height=\"100%\" margin=\"auto\">\n      <Pane>\n        <h2 className=\"hidden-print\" style={{ marginLeft: \"40px\" }}>\n          Japanese Syllabaries\n        </h2>\n        <Pane>\n          <Tablist\n            className=\"hidden-print\"\n            marginBottom={5}\n            flexBasis={240}\n            textAlign={\"right\"}\n            marginRight={34}\n          >\n            {state.tabs.map((tab, index) => (\n              <Tab\n                key={tab}\n                id={tab}\n                onSelect={() => setState({ selectedIndex: index })}\n                isSelected={index === state.selectedIndex}\n                aria-controls={`panel-${tab}`}\n                style={{ height: \"40px\" }}\n              >\n                <h3>{tab}</h3>\n              </Tab>\n            ))}\n          </Tablist>\n          <Pane padding={20} background=\"#fff\" flex=\"1\">\n            {state.tabs.map((tab, index) => (\n              <Pane\n                key={tab}\n                id={`panel-${tab}`}\n                role=\"tabpanel\"\n                aria-labelledby={tab}\n                aria-hidden={index !== state.selectedIndex}\n                display={index === state.selectedIndex ? \"block\" : \"none\"}\n              >\n                <Pane display=\"flex\" alignItems=\"flex-start\">\n                  {state[tab].map((col, ix) => (\n                    <Pane\n                      key={ix}\n                      flex=\"1 1 50%\"\n                      flexWrap=\"wrap\"\n                      display=\"flex\"\n                      padding={0}\n                      marginX={20}\n                      alignItems=\"flex-start\"\n                      justifyContent=\"center\"\n                    >\n                      {col.map((line, li) => (\n                        <Pane\n                          key={li}\n                          flex=\"1 1 100%\"\n                          display=\"flex\"\n                          alignItems=\"flex-start\"\n                          justifyContent=\"space-between\"\n                          {...cc(line)}\n                        >\n                          {line.map((word, wi) => (\n                            <Pane\n                              key={wi}\n                              margin={1}\n                              display=\"flex\"\n                              alignItems=\"center\"\n                              justifyContent=\"center\"\n                              padding={8}\n                              minWidth={54}\n                              flexDirection=\"column\"\n                              onClick={() => {\n                                cardClick(state.yin[ix][li][wi], word);\n                              }}\n                              onMouseEnter={() => {\n                                preloadVoice(state.yin[ix][li][wi], word);\n                              }}\n                              className=\"ja-word\"\n                            >\n                              <Text fontSize={\"32px\"}>{word}</Text>\n                              <Text color=\"#69BF61\" marginTop={8}>\n                                {state.yin[ix][li][wi]}\n                              </Text>\n                              <div className=\"voice-ico\">\n                                <VoiceComponent\n                                  color=\"#fff\"\n                                  width=\"30\"\n                                  height=\"30\"\n                                ></VoiceComponent>\n                              </div>\n                            </Pane>\n                          ))}\n                        </Pane>\n                      ))}\n                    </Pane>\n                  ))}\n                </Pane>\n              </Pane>\n            ))}\n          </Pane>\n        </Pane>\n      </Pane>\n\n      <style jsx global>{`\n        .ja-word {\n          border: 1px solid #69bf61;\n          cursor: pointer;\n          border-radius: 5px;\n          position: relative;\n          overflow: hidden;\n          .voice-ico {\n            position: absolute;\n            background: #457940;\n            width: 100%;\n            height: 100%;\n            justify-content: center;\n            align-items: center;\n            opacity: 0.5;\n            display: none;\n          }\n          &:hover {\n            .voice-ico {\n              display: flex;\n            }\n          }\n        }\n        @media print {\n          .ja-word {\n          }\n        }\n      `}</style>\n    </Pane>\n  );\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAAA;AAGA;AAIA;AAEA;AACA;AACA;AAiCA;AAiCA;AArEA;AARA;AAAA;AAAA;AACA;AA+GA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AATA;AAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAvBA;AATA;AAXA;AAVA;AA3BA;AAAA;AAAA;AAiIA;;;;A","sourceRoot":""}