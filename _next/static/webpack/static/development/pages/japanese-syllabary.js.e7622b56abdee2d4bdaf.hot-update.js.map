{"version":3,"file":"static/webpack/static/development/pages/japanese-syllabary.js.e7622b56abdee2d4bdaf.hot-update.js","sources":["webpack:///./pages/japanese-syllabary.tsx"],"sourcesContent":["import React, {\n  useState,\n  useCallback,\n  useEffect,\n  useReducer,\n  useLayoutEffect\n} from \"react\";\nimport { Pane, Tablist, Tab, Paragraph, Text } from \"evergreen-ui\";\nimport WriteCharactorSearch from \"@components/WriteCharactor/WriteCharactorSearch\";\n// import chinese from \"@constants/chinese.json\";\nimport { converttoNoTone } from \"@utils/utils\";\nimport VoiceComponent from \"@components/icons/VoiceComponent\";\nlet time = 0;\nlet reqFrame;\nlet paths = [];\nconst BOARD_CELL_SIZE = 298;\nconst BOARD_SIZE = 3;\nconst PADDING = 2;\nconst LAYOUT_SIZE = 600;\nconst commonWords = ``;\n\n\nexport default function () {\n  const [char, setChar] = useState(\"\");\n  const [pinyin, setPinyin] = useState(\"\");\n  const [state, setState] = useReducer((state, action) => {\n    return {\n      ...state,\n      ...action\n    }\n  }, {\n      selectedIndex: 0,\n      tabs: ['Hiragana', 'Katakana'],\n      Hiragana: [[\n        [\"あ\", \"い\", \"う\", \"え\", \"お\"],\n        [\"か\", \"き\", \"く\", \"け\", \"こ\"],\n        [\"さ\", \"し\", \"す\", \"せ\", \"そ\"],\n        [\"た\", \"ち\", \"つ\", \"て\", \"と\"],\n        [\"な\", \"に\", \"ぬ\", \"ね\", \"の\"],\n        [\"は\", \"ひ\", \"ふ\", \"へ\", \"ほ\"],\n        [\"ま\", \"み\", \"む\", \"め\", \"も\"],\n        [\"や\", \"ゆ\", \"よ\"],\n        [\"ら\", \"り\", \"る\", \"れ\", \"ろ\"],\n        [\"わ\", \"を\"],\n        [\"ん\"]\n      ],\n      [\n        [\"が\", \"ぎ\", \"ぐ\", \"げ\", \"ご\"],\n        [\"ざ\", \"じ\", \"ず\", \"ぜ\", \"ぞ\"],\n        [\"だ\", \"ぢ\", \"づ\", \"で\", \"ど\"],\n        [\"ば\", \"び\", \"ぶ\", \"べ\", \"ぼ\"],\n        [\"ぱ\", \"ぴ\", \"ぷ\", \"ぺ\", \"ぽ\"],\n        [\"きゃ\", \"きゅ\", \"きょ\"],\n        [\"しゃ\", \"しゅ\", \"しょ\"],\n        [\"ちゃ\", \"ちゅ\", \"ちょ\"],\n        [\"にゃ\", \"にゅ\", \"にょ\"],\n        [\"ひゃ\", \"ひゅ\", \"ひょ\"],\n        [\"みゃ\", \"みゅ\", \"みょ\"],\n        [\"りゃ\", \"りゅ\", \"りょ\"],\n        [\"ぎゃ\", \"ぎゅ\", \"ぎょ\"],\n        [\"じゃ\", \"じゅ\", \"じょ\"],\n        [\"びゃ\", \"びゅ\", \"びょ\"],\n        [\"ぴゃ\", \"ぴゅ\", \"ぴょ\"]\n      ]\n      ],\n      Katakana: [[\n        [\"ア\", \"イ\", \"ウ\", \"エ\", \"オ\"],\n        [\"カ\", \"キ\", \"ク\", \"ケ\", \"コ\"],\n        [\"サ\", \"シ\", \"ス\", \"セ\", \"ソ\"],\n        [\"タ\", \"チ\", \"ツ\", \"テ\", \"ト\"],\n        [\"ナ\", \"ニ\", \"ヌ\", \"ネ\", \"ノ\"],\n        [\"ハ\", \"ヒ\", \"フ\", \"ヘ\", \"ホ\"],\n        [\"マ\", \"ミ\", \"ム\", \"メ\", \"モ\"],\n        [\"ヤ\", \"ユ\", \"ヨ\"],\n        [\"ラ\", \"リ\", \"ル\", \"レ\", \"ロ\"],\n        [\"ワ\", \"ヲ\"],\n        [\"ン\"],\n      ],\n      [\n        [\"ガ\", \"ギ\", \"グ\", \"ゲ\", \"ゴ\"],\n        [\"ザ\", \"ジ\", \"ズ\", \"ゼ\", \"ゾ\"],\n        [\"ダ\", \"ヂ\", \"ヅ\", \"デ\", \"ド\"],\n        [\"バ\", \"ビ\", \"ブ\", \"ベ\", \"ボ\"],\n        [\"パ\", \"ピ\", \"プ\", \"ペ\", \"ポ\"],\n        [\"キャ\", \"キュ\", \"キョ\"],\n        [\"シャ\", \"シュ\", \"ショ\"],\n        [\"チャ\", \"チュ\", \"チョ\"],\n        [\"ニャ\", \"ニュ\", \"ニョ\"],\n        [\"ヒャ\", \"ヒュ\", \"ヒョ\"],\n        [\"ミャ\", \"ミュ\", \"ミョ\"],\n        [\"リャ\", \"リュ\", \"リョ\"],\n        [\"ギャ\", \"ギュ\", \"ギョ\"],\n        [\"ジャ\", \"ジュ\", \"ジョ\"],\n        [\"ビャ\", \"ビュ\", \"ビョ\"],\n        [\"ピャ\", \"ピュ\", \"ピョ\"]\n      ]\n      ],\n      yin: [[\n        ['a', 'i', 'u', 'e', 'o'],\n        ['ka', 'ki', 'ku', 'ke', 'ko'],\n        ['sa', 'shi', 'su', 'se', 'so'],\n        ['ta', 'chi', 'tsu', 'te', 'to'],\n        ['na', 'ni', 'nu', 'ne', 'no'],\n        ['ha', 'hi', 'fu', 'he', 'ho'],\n        ['ma', 'mi', 'mu', 'me', 'mo'],\n        ['ya', 'yu', 'yo'],\n        ['ra', 'ri', 'ru', 're', 'ro'],\n        ['wa','o'],\n        ['n']\n      ],[\n        ['ga', 'gi', 'gu', 'ge', 'go'],\n        ['za', 'ji', 'zu', 'ze', 'zo'],\n        ['da', 'ji', 'zu', 'de', 'do'],\n        ['ba', 'bi', 'bu', 'be', 'bo'],\n        ['pa', 'pi', 'pu', 'pe', 'po'],\n        ['kya',  'kyu',  'kyo'],\n        ['sha',  'shu',  'sho'],\n        ['cha',  'chu',  'cho'],\n        ['nya',  'nyu',  'nyo'],\n        ['hya',  'hyu',  'hyo'],\n        ['mya',  'myu',  'myo'],\n        ['rya',  'ryu',  'ryo'],\n        ['gya',  'gyu',  'gyo'],\n        ['ja',  'ju',  'jo'],\n        ['bya',  'byu',  'byo'],\n        ['pya',  'pyu',  'pyo'],\n      ]]\n    })\n\n\n\n  let audioRef = React.createRef() as any;\n  \n\n  const onVoiceHover = () => {\n    var n = audioRef;\n    n.src = n.getAttribute(\"datasrc\");\n  };\n\n  const onVoiceClick = () => {\n    var n = audioRef;\n    n.loop = false;\n    n.play();\n  };\n\n  const cardClick = (yin, word)=> {\n    var n = audioRef;\n    if(yin.length == 1) {\n      yin = yin + yin;\n    }\n    n.src = `https://www.nhk.or.jp/lesson/mp3/syllabary/${yin}.mp3`\n    n.loop = false;\n    n.play();\n    onSearch(word);\n  }\n\n  const cc = (line)=> {\n    return line.length == 1 ? {justifyContent: 'flex-end'} : {}\n  }\n\n  return (\n    <Pane width=\"800px\" height=\"100%\" margin=\"auto\">\n      <Pane\n        className=\"clearfix\"\n        width={\"600px\"}\n        margin={\"auto\"}\n        paddingTop={50}\n      >\n        <canvas id=\"canvas\" width={LAYOUT_SIZE} height={LAYOUT_SIZE}></canvas>\n      </Pane>\n      <Pane lineHeight=\"32px\" fontSize=\"18px\">\n        拼 音: {pinyin}{\" \"}\n        <VoiceComponent\n          style={{ verticalAlign: \"middle\", cursor: \"pointer\" }}\n          onMouseEnter={onVoiceHover}\n          onClick={onVoiceClick}\n        ></VoiceComponent>\n      </Pane>\n      <Pane>\n        <Pane >\n          <Tablist marginBottom={16} flexBasis={240} textAlign={'right'} marginRight={24}>\n            {state.tabs.map((tab, index) => (\n              <Tab\n                key={tab}\n                id={tab}\n                onSelect={() => setState({ selectedIndex: index })}\n                isSelected={index === state.selectedIndex}\n                aria-controls={`panel-${tab}`}\n              >\n                <h3>{tab}</h3>\n              </Tab>\n            ))}\n          </Tablist>\n          <Pane padding={16} background=\"#fff\" flex=\"1\">\n            {state.tabs.map((tab, index) => (\n              <Pane\n                key={tab}\n                id={`panel-${tab}`}\n                role=\"tabpanel\"\n                aria-labelledby={tab}\n                aria-hidden={index !== state.selectedIndex}\n                display={index === state.selectedIndex ? 'block' : 'none'}\n              >\n                <Pane display=\"flex\" alignItems=\"flex-start\" >\n                {state[tab].map((col, ix) => (\n                  <Pane\n                    key={ix}\n                    flex=\"1 1 50%\"\n                    flexWrap=\"wrap\"\n                    display=\"flex\"\n                    padding={0}\n                    marginX={20}\n                    alignItems=\"flex-start\"\n                    justifyContent=\"center\"\n                  >\n                    {col.map((line, li) => (\n                      <Pane\n                        key={li}\n                        flex=\"1 1 100%\"\n                        display=\"flex\"\n                        alignItems=\"flex-start\"\n                        justifyContent=\"space-between\"\n                        {...cc(line)}\n                      >\n                        {\n                          line.map((word, wi) => (\n                            <Pane\n                              key={wi}\n                              margin={1}\n                              display=\"flex\"\n                              alignItems=\"center\"\n                              justifyContent=\"center\"\n                              padding={10}\n                              minWidth={54}\n                              flexDirection=\"column\"\n                              onClick={()=> {cardClick(state.yin[ix][li][wi], word)}}\n                              style={{ border: '1px solid #69BF61', borderRadius: '5px'}}\n                            >\n                              <Text fontSize={'35px'}>{word}</Text>\n                              <Text color=\"#69BF61\" marginTop={10} >{state.yin[ix][li][wi]}</Text>\n                            </Pane>\n                          ))\n                        }\n                      </Pane>\n                    ))}\n                  </Pane>\n                ))}\n                </Pane>\n              </Pane>\n            ))}\n          </Pane>\n        </Pane>\n        {commonWords.split(\"\").map(word => {\n          return (\n            <a\n              href=\"javascript:;\"\n              className=\"word\"\n              key={word}\n              onClick={() => {\n                toTop();\n                setTimeout(() => {\n                  onSearch(word);\n                }, 500);\n              }}\n            >\n              {word}\n            </a>\n          );\n        })}\n      </Pane>\n      <div style={{ display: \"none\" }}>\n        <audio\n          id=\"audio\"\n          ref={input => {\n            audioRef = input;\n          }}\n        ></audio>\n      </div>\n\n      <style jsx>{`\n          .word {\n            margin-right: 20px;\n            line-height: 25px;\n            color: #000;\n          }\n        `}</style>\n    </Pane>\n  );\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAOA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAIA;AAIA;AACA;AACA;AACA;AAgCA;AAgCA;AAnEA;AARA;AAAA;AAAA;AACA;AA4GA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AARA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAdA;AAVA;AAXA;AAVA;AA2DA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA9GA;AAAA;AAAA;AA+HA;;;;A","sourceRoot":""}