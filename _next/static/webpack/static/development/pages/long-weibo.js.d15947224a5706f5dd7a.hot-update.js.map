{"version":3,"file":"static/webpack/static/development/pages/long-weibo.js.d15947224a5706f5dd7a.hot-update.js","sources":["webpack:///./pages/long-weibo.tsx"],"sourcesContent":["import React from \"react\";\n\nlet ClassicEditor, CKEditor;\n\nif(__CLIENT__) {\n    ClassicEditor = _ckeditor_ckeditor5BuildClassic;\n    CKEditor = _ckeditor_ckeditor5React;\n}\nclass MyUploadAdapter {\n    loader: any;\n    constructor(loader) {\n        this.loader = loader;\n    }\n    upload() {\n        const loader = this.loader;\n\n        // Return a promise that will be resolved when the file is uploaded.\n        return loader.file;\n    }\n    // ...\n}\n\nfunction MyCustomUploadAdapterPlugin( editor ) {\n    editor.plugins.get( 'FileRepository' ).createUploadAdapter = ( loader ) => {\n        // Configure the URL to the upload script in your back-end here!\n        return new MyUploadAdapter( loader );\n    };\n}\nexport default function() {\n    return (\n        <div style={{width: '700px', minHeight: '1000px', margin: 'auto'}}>\n            {__CLIENT__ && <div>\n                <CKEditor\n                    editor={ ClassicEditor }\n                    data=\"<p>Hello from CKEditor 5!</p>\"\n                    config={{\n                        extraPlugins: [ MyCustomUploadAdapterPlugin ],\n                        config: {\n                            ui: {\n                                width: '500px',\n                                height: '300px'\n                            }\n                        }\n                    }}\n                    onInit={ editor => {\n                        // You can store the \"editor\" and use when it is needed.\n                        console.log( 'Editor is ready to use!', editor );\n                    } }\n                    onChange={ ( event, editor ) => {\n                        const data = editor.getData();\n                        console.log( { event, editor, data } );\n                    } }\n                    onBlur={ editor => {\n                        console.log( 'Blur.', editor );\n                    } }\n                    onFocus={ editor => {\n                        console.log( 'Focus.', editor );\n                    } }\n                />\n            </div>}\n            <style jsx>{`\n\n            `}</style>\n        </div>\n    );\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;;;AAAA;AACA;AACA;AAEA;AACA;AACA;;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AADA;AAFA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAzBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAmCA;;;;A","sourceRoot":""}