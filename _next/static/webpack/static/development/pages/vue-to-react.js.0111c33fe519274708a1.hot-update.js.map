{"version":3,"file":"static/webpack/static/development/pages/vue-to-react.js.0111c33fe519274708a1.hot-update.js","sources":["webpack:///./pages/vue-to-react.tsx"],"sourcesContent":["import ConversionPanel from \"@components/ConversionPanel\";\nimport { EditorPanelProps } from \"@components/EditorPanel\";\nimport Form, { InputType } from \"@components/Form\";\nimport { useSettings } from \"@hooks/useSettings\";\nimport { useCallback, useState } from \"react\";\nimport * as React from \"react\";\ninterface Settings {\n  auto: boolean;\n  sfc: boolean;\n}\n\nconst formFields = [\n  {\n    type: InputType.SWITCH,\n    key: \"auto\",\n    label: \"Auto detect Single File Components\"\n  },\n  {\n    type: InputType.SWITCH,\n    key: \"sfc\",\n    label: \"Is Single File Components\"\n  }\n];\nconst defValue = `\n<template>\n  <div class=\"lorem\">\n    {{lorem}}\n  </div>\n</template>\n<script>\nexport default {\n  name: 'lorem',\n  props: ['len'],\n  data () {\n    return {\n      str: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod' +\n      'tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,' +\n      'quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo' +\n      'consequat. '\n    }\n  },\n  computed: {\n    lorem () {\n      return this.genLorem()\n    }\n  },\n  methods: {\n    genLorem () {\n      let str = ''\n      for (let i = 0; i < this.len; i++) {\n        str += this.str\n      }\n      return str\n    }\n  }\n}\n</script>\n\n`\nexport default function() {\n  const name = \"Vue to React\";\n  const [settings, setSettings] = useSettings(name, {\n    auto: true,\n    sfc: false\n  });\n  const transformer = useCallback(\n    async ({ value }) => {\n      if (value) {\n        if (settings.auto) {\n          if (/\\<(script|template)\\>/g.test(value)) {\n            return _w3cub_vueToReact(value, true);\n          } else {\n            return _w3cub_vueToReact(value, false);\n          }\n        } else {\n          return _w3cub_vueToReact(value, settings.sfc);\n        }\n      }\n      return value;\n    },\n    [settings]\n  );\n  const getSettingsElement = useCallback<EditorPanelProps[\"settingElement\"]>(\n    ({ open, toggle }) => {\n      return (\n        <Form<Settings>\n          title=\"Vue to React\"\n          onSubmit={setSettings}\n          open={open}\n          toggle={toggle}\n          formsFields={formFields}\n          initialValues={settings}\n        />\n      );\n    },\n    []\n  );\n  return (\n    <ConversionPanel\n      layoutHeight=\"700px\"\n      transformer={transformer}\n      editorTitle=\"Vue\"\n      editorLanguage=\"html\"\n      editorDefaultValue={defValue}\n      editorSettingsElement={getSettingsElement}\n      settings={settings}\n      resultTitle=\"React\"\n      resultLanguage={\"javascript\"}\n    />\n  );\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AACA;AACA;AAMA;AAEA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AAoCA;AACA;AACA;AAFA;AAGA;AACA;AAFA;AAFA;AAAA;AAAA;AACA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAiBA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;;;;A","sourceRoot":""}