{"version":3,"file":"static/webpack/static/development/pages/gradient-color.js.7710cdeb3c5e000f42db.hot-update.js","sources":["webpack:///./pages/gradient-color.tsx"],"sourcesContent":["import gradients from \"@constants/gradients.json\";\nimport { Icon, toaster } from \"evergreen-ui\";\nimport AnglePicker from \"@components/Gradient/AnglePicker\";\nimport { useState } from \"react\";\nimport copy from \"@utils/copy\";\n\nfunction GradientItem({ item, copyCode, bgDownload }) {\n  const [angle, setAngle] = useState(135);\n  return (\n    <div className=\"ch-gradient-brick\">\n      <div\n        className=\"ch-gradient\"\n        style={{\n          backgroundImage: `linear-gradient(${angle}deg, ${item[0]} 10%, ${item[1]} 100%)`\n        }}\n      >\n        <div className=\"ch-actions\">\n          <AnglePicker\n            className=\"ch-angle\"\n            callback={(c: number) => {\n              setAngle(c);\n            }}\n            angle={angle}\n          ></AnglePicker>\n          <a\n            className=\"ch-code\"\n            data-color-angle={angle}\n            data-color-from={item[0]}\n            data-color-to={item[1]}\n            onClick={copyCode}\n          >\n            <Icon icon=\"code\" color=\"white\" />\n          </a>\n          <a\n            className=\"ch-grab\"\n            data-color-angle={angle}\n            data-color-from={item[0]}\n            data-color-to={item[1]}\n            onClick={bgDownload}\n          >\n            <Icon icon=\"download\" color=\"white\" />\n          </a>\n        </div>\n      </div>\n      <div className=\"ch-colors\">\n        <span className=\"ch-color-from\">{item[0]}</span>\n        <span className=\"ch-color-to\" style={{ color: item[1] }}>\n          {item[1]}\n        </span>\n      </div>\n      <style jsx>{`\n        .ch-gradient-brick {\n          width: 180px;\n          display: inline-block;\n          margin: 25px;\n          box-shadow: 0px 0px 51px 0px rgba(0, 0, 0, 0.08),\n            0px 6px 18px 0px rgba(0, 0, 0, 0.05);\n          transition: transform 0.35s cubic-bezier(0.4, 0, 0.2, 1),\n            box-shadow 0.35s cubic-bezier(0.4, 0, 0.2, 1);\n          transform: translateY(0px);\n        }\n\n        .ch-gradient-brick:hover {\n          box-shadow: 0px 0px 114px 0px rgba(0, 0, 0, 0.08),\n            0px 30px 25px 0px rgba(0, 0, 0, 0.05);\n          transform: translateY(-5px);\n        }\n\n        .ch-gradient {\n          width: 100%;\n          height: 180px;\n          position: relative;\n          background-color: #cfd8dc;\n        }\n\n        .ch-actions {\n          display: none;\n          position: absolute;\n          right: 5px;\n          bottom: 5px;\n        }\n\n        .ch-gradient-brick:hover .ch-actions {\n          display: block;\n          animation: micro-move 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n        }\n\n        .ch-actions :global(.ch-angle) {\n          top: -95px;\n          right: -25px;\n        }\n\n        .ch-code,\n        .ch-grab {\n          width: 26px;\n          height: 26px;\n          display: inline-block;\n          background-repeat: no-repeat;\n          cursor: pointer;\n          vertical-align: middle;\n          margin: 3px;\n          transform: translateY(0px);\n          transition: 0.2s cubic-bezier(0.4, 0, 0.2, 1);\n          opacity: 0.7;\n        }\n\n        @keyframes micro-move {\n          from {\n            transform: translateY(5px);\n          }\n          to {\n            transform: translateY(0px);\n          }\n        }\n\n        .ch-code:hover,\n        .ch-grab:hover {\n          opacity: 1;\n          transform: translateY(-4px);\n        }\n\n        .ch-code:active,\n        .ch-grab:active {\n          opacity: 1;\n          transform: translateY(-2px);\n        }\n\n        .ch-code {\n          background-position: -26px 0px;\n        }\n\n        .ch-grab {\n          background-position: 0px 0px;\n        }\n\n        .ch-colors {\n          padding: 12px;\n          text-align: left;\n          text-transform: uppercase;\n          font-size: 18px;\n        }\n\n        .ch-color-from {\n          margin-bottom: 3px;\n        }\n\n        .ch-color-from,\n        .ch-color-to {\n          color: #929197;\n          display: block;\n          padding: 0px;\n        }\n      `}</style>\n    </div>\n  );\n}\n\nexport default function Gradient() {\n  var backgroundImage = \"background-image: \";\n  var gradientStart = \" 10%, \";\n  var gradientEnd = \" 100%)\";\n\n  var copyCode = function(event) {\n    var eventColorFrom = event.currentTarget.dataset.colorFrom;\n    var eventColorTo = event.currentTarget.dataset.colorTo;\n    var eventColorAngle = event.currentTarget.dataset.colorAngle;\n    var gradientType = `linear-gradient( ${eventColorAngle}deg, `;\n    var eventResult =\n      backgroundImage +\n      gradientType +\n      eventColorFrom +\n      gradientStart +\n      eventColorTo +\n      gradientEnd +\n      \";\";\n\n    const isCopied = copy(eventResult);\n    if (isCopied) {\n      toaster.success(\"CSS3 Code Copied! üëç\", {\n        duration: 2\n      });\n    }\n  };\n  var bgDownload = function(event) {\n    //Grab Palette\n    var eventColorFrom = event.currentTarget.dataset.colorFrom;\n    var eventColorTo = event.currentTarget.dataset.colorTo;\n    var eventColorAngle = event.currentTarget.dataset.colorAngle;\n    var canvas = document.createElement(\"canvas\") as HTMLCanvasElement;\n    canvas.width = 1000;\n    canvas.height = 1000;\n    var ctx = canvas.getContext(\"2d\");\n\n    const maxLength = Math.sqrt(\n      canvas.width * canvas.width + canvas.height * canvas.height\n    );\n\n    var angle = eventColorAngle;\n    console.info(      canvas.width / 2 + Math.cos(angle) * maxLength * 0.5,\n    canvas.height / 2 + Math.sin(angle) * maxLength * 0.5,\n    canvas.width / 2 - Math.cos(angle) * maxLength * 0.5,\n    canvas.height / 2 - Math.sin(angle) * maxLength * 0.5);\n    var tempGradient = ctx.createLinearGradient(\n      canvas.width / 2 + Math.cos(angle) * maxLength * 0.5,\n      canvas.height / 2 + Math.sin(angle) * maxLength * 0.5,\n      canvas.width / 2 - Math.cos(angle) * maxLength * 0.5,\n      canvas.height / 2 - Math.sin(angle) * maxLength * 0.5\n    );\n    // var tempGradient = ctx.createLinearGradient(0, 0, 1000, 1000);\n    tempGradient.addColorStop(0, eventColorFrom);\n    tempGradient.addColorStop(1, eventColorTo);\n    ctx.fillStyle = tempGradient;\n    ctx.fillRect(0, 0, 1000, 1000);\n    var dataURL = canvas.toDataURL();\n    event.currentTarget.href = dataURL;\n    var fileName =\n      \"gradient-\" + eventColorFrom.slice(1, 7) + \"-\" + eventColorTo.slice(1, 7);\n    event.currentTarget.setAttribute(\"download\", fileName);\n  };\n  return (\n    <div className=\"ch-paper\">\n      {gradients.map((item, ix) => {\n        return (\n          <GradientItem\n            item={item}\n            key={ix}\n            copyCode={copyCode}\n            bgDownload={bgDownload}\n          ></GradientItem>\n        );\n      })}\n      <style jsx>{`\n        .ch-paper {\n          text-align: center;\n          margin: 0px auto;\n          font-family: \"Source Sans Pro\", sans-serif;\n          line-height: 1.3;\n        }\n      `}</style>\n    </div>\n  );\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AADA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AArCA;AAAA;AAAA;AAkJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AASA;AACA;AAAA;AACA;AACA;AADA;AAGA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAIA;AACA;AAIA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAVA;AAAA;AAAA;AAqBA;;;;A","sourceRoot":""}