{"version":3,"file":"static/webpack/static/development/pages/long-weibo.js.9ce47441558f0fc48b98.hot-update.js","sources":["webpack:///./pages/long-weibo.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Button, Pane, Dialog } from \"evergreen-ui\";\n\nlet ClassicEditor, CKEditor;\n\nif(__CLIENT__) {\n    ClassicEditor = _ckeditor_ckeditor5BuildClassic;\n    CKEditor = _ckeditor_ckeditor5React;\n}\nclass MyUploadAdapter {\n    loader: any;\n    constructor(loader) {\n        this.loader = loader;\n    }\n    upload() {\n        const loader = this.loader;\n        return loader.file;\n    }\n}\n\nfunction MyCustomUploadAdapterPlugin( editor ) {\n    editor.plugins.get( 'FileRepository' ).createUploadAdapter = ( loader ) => {\n        // Configure the URL to the upload script in your back-end here!\n        return new MyUploadAdapter( loader );\n    };\n}\n\nfunction toDataUrl(url, callback) {\n    var xhr = new XMLHttpRequest();\n    xhr.onload = function() {\n      callback(xhr.response);\n    };\n    xhr.open('GET', url);\n    xhr.send();\n}\n\nconst proxyToDataUrl = (url, callback)=> {\n    url = 'https://helloacm.com/api/image-to-base64/?url=' + url;\n    return toDataUrl(url, callback);\n}\n\n\nconst doImages = () => {\n    var images = document.querySelector(\".ck.ck-content\").getElementsByTagName('img');\n    [].slice.call(images).forEach((item, _i)=> {\n        if(/^(https?\\:)?\\/\\//.test(item.src)) {\n            proxyToDataUrl(item.src, (url)=> {\n                item.src = url;\n            })\n        }\n    })\n}\n\n\nexport default function() {\n    const generateImage = ()=> {\n        var images = document.querySelector(\".ck.ck-content\").getElementsByTagName('img');\n        var imgs = [].slice.call(images).reduce((prev, item)=> {\n            if(/^(https?\\:)?\\/\\//.test(item.src)) {\n                return  prev + Number(true)\n            } else { return prev}\n        }, 0);\n        if(imgs > 0) {\n            setLoading(true);\n            setTimeout(()=> {\n                generateImage();\n            }, 300);\n            return;\n        } else {\n            setLoading(false);\n        }\n        let el = document.querySelector(\".ck.ck-content\");\n        var data = el.className;\n        el.className += ' html2canvasreset';\n        console.log(el, el.scrollHeight, el.scrollWidth);\n        html2canvas(el, {\n            allowTaint: true,\n            allowedContent:true,\n            width: el.scrollWidth,\n            height: el.scrollHeight\n        }).then(canvas => {\n            var ctx = canvas.getContext(\"2d\");\n            ctx.font = \"10px Comic Sans MS\";\n            ctx.fillStyle = \"red\";\n            // ctx.textAlign = \"right\";\n\n            let text = \"Generate by w3cubTools\";\n            const width = 0 && ctx.measureText(text).width;\n            const height = 0 && ctx.measureText(text).height;\n            ctx.fillText(text, canvas.width, canvas.height);\n\n            el.className = data;//old className - Jquery: $(target).removeClass(\"html2canvasreset\");\n            setOpen(true);\n            let div = document.getElementById('cnavas');\n            var imgUri = canvas.toDataURL();\n            setImgUri(imgUri);\n            if(div) {\n                div.append(canvas);\n            }\n        });\n    }\n    const [open , setOpen] = useState(false);\n    const [imgUri, setImgUri] = useState('');\n    const [isLoading, setLoading] = useState(false);\n    return (\n        <div className=\"box\" style={{width: '700px', margin: 'auto'}}>\n            <h1>长微博生成器</h1>\n            <Pane marginBottom={15} >\n                <Button height={50} isLoading={isLoading} onClick={generateImage} >Generate Image</Button>\n            </Pane>\n            <Dialog\n                isShown={open}\n                width={\"max-content\"}\n                topOffset=\"30px\"\n                title=\"Image results\"\n                onCloseComplete={() => setOpen(false)}\n                hasFooter={false}\n            >\n                <div>\n                    <Button is='a' className=\"save-btn\"  href={imgUri}  download=\"logtexttiamge.png\">\n                        Save as Image\n                    </Button>\n                    <div id=\"cnavas\"></div>\n                </div>\n            </Dialog>\n            {__CLIENT__ && \n                <CKEditor\n                    editor={ ClassicEditor }\n                    id=\"editor_box\"\n                    data=\"<div id='capture'>Welcome to Long Weibo Generator!</div>\"\n                    config={{\n                        toolbar: [\"heading\",\"|\",\"bold\",\"italic\",\"link\",\"bulletedList\",\"numberedList\", \"imageUpload\",\"blockQuote\",\"insertTable\", \"undo\",\"redo\"], // \"mediaEmbed\",\n                        extraPlugins: [ MyCustomUploadAdapterPlugin ],\n                        config: {\n                            ui: {\n                                width: '500px',\n                                height: '300px'\n                            }\n                        }\n                    }}\n                    onInit={ editor => {\n                        \n                        // You can store the \"editor\" and use when it is needed.\n                        console.log( 'Editor is ready to use!', editor );\n                    } }\n                    onChange={ ( event, editor ) => {\n                        const data = editor.getData();\n                        setTimeout(()=> {\n                            doImages();\n                        }, 300)\n                        console.log( { event, editor, data } );\n                    } }\n                    onBlur={ editor => {\n                        console.log( 'Blur.', editor );\n                    } }\n                    onFocus={ editor => {\n                        console.log( 'Focus.', editor );\n                    } }\n                />}\n                <style>{`\n                .html2canvasreset{\n                    overflow: visible !important;\n                    width: auto !important;\n                    height: auto !important;\n                    max-height: auto !important;\n                    border: 1px solid transparent!important;\n                }\n                .ck-editor__main > .ck-editor__editable {\n                    min-height: 500px;\n                }\n                `}</style>\n        </div>\n    );\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;;;AAAA;AACA;AACA;AACA;;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AA/CA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAiDA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAFA;AADA;AAHA;AAUA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA/BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA;;;;A","sourceRoot":""}