{"version":3,"file":"static/webpack/static/development/pages/image-to-text.js.29a403918658282c448e.hot-update.js","sources":["webpack:///./components/image-to-text/component/ImagePreviewUpload.jsx"],"sourcesContent":["import React from 'react'\nimport classNames from 'classnames'\nimport { checkImageType } from '../tools/imageCommon'\nimport { toaster } from \"evergreen-ui\";\nimport '../style/imagePreviewUpload.css'\n/**\n * 图片上传预览组件\n *\n * @export\n * @class ImagePreviewUpload\n * @extends {React.Component}\n */\nexport default class ImagePreviewUpload extends React.Component {\n\n  /**\n   * Creates an instance of ImagePreviewUpload.\n   *\n   * @param {object} props\n   * @param {HTMLImageElement} props.image\n   * @param {File} props.file\n   * @param {number} props.previewWidth\n   * @param {Function} props.setImageAndFile\n   *\n   * @memberof ImagePreviewUpload\n   */\n  constructor(props) {\n    super(props)\n    this.state = {\n      isDragging: false,\n      width: 400,\n      height: 250\n    }\n\n    /**\n     * @type {React.RefObject<HTMLInputElement>}\n     */\n    this.fileUpload = React.createRef()\n    this.currentImageRef = React.createRef()\n    this.componentRef = React.createRef()\n  }\n\n  /**\n   * 返回当前显示图像的引用（有宽高变化）\n   *\n   * @returns\n   * @memberof ImagePreviewUpload\n   */\n  getCurrentImage() {\n    return this.currentImageRef.current\n  }\n\n  dragEnter = ev => {\n    ev.preventDefault()\n    this.setState({\n      isDragging: true\n    })\n  }\n\n  dragOver = ev => {\n    ev.preventDefault()\n  }\n\n  dragLeave = ev => {\n    ev.preventDefault()\n    this.setState({\n      isDragging: false\n    })\n  }\n\n  drop = ev => {\n    ev.preventDefault()\n    this.setState({\n      isDragging: false\n    })\n    const file = ev.dataTransfer.files[0]\n    this.previewImage(file)\n  }\n\n  openFileInput = () => {\n    this.fileUpload.current.click()\n  }\n\n  setFile = ev => {\n    const file = ev.target.files[0]\n    if (file) {\n      this.previewImage(file)\n    }\n  }\n\n  /**\n   * 预览图片文件\n   *\n   * @param {File} file\n   * @memberof ImagePreviewUpload\n   */\n  previewImage(file) {\n    if (!checkImageType(file.type)) {\n      alert('不支持该格式的文件')\n      return\n    }\n    const reader = new FileReader()\n    reader.readAsDataURL(file)\n    reader.addEventListener('load', () => {\n      const image = new Image()\n      image.addEventListener('load', () => {\n        this.scaleImageContainer(image)\n        this.props.setImageAndFile(image, file)\n      })\n      image.src = reader.result\n    })\n  }\n\n  /**\n   * 等比例缩放图片尺寸\n   *\n   * @param {HTMLImageElement} image\n   */\n  scaleImageContainer(image) {\n    if (!image) {\n      // 不传递image时，使用当前的image（App组件传递）\n      image = this.props.image\n    }\n    const container = this.componentRef.current.parentElement\n    let targetWidth = this.props.previewWidth\n\n    // 缩放宽度检测\n    if (!targetWidth) {\n      // 没有指定宽度(或为0), 使用容器宽度\n      targetWidth = container.clientWidth\n      // 容器宽度比图片原宽度大，使用图片原宽度\n      if (image.width < targetWidth) {\n        targetWidth = image.width\n      }\n    } else if (targetWidth > container.clientWidth) {\n      toaster.alert('More than the container size! Please re-enter the image width')\n      return\n    }\n\n    const ratio = image.width / targetWidth\n    const targetHeight = image.height / ratio\n    this.setState({\n      width: targetWidth,\n      height: targetHeight\n    })\n  }\n\n  render() {\n    const uploadBlockClasses = classNames('upload-image-block', {active: this.state.isDragging}, this.props.className)\n    return (\n      <div\n        onDragEnter={this.dragEnter}\n        onDragOver={this.dragOver}\n        onDragLeave={this.dragLeave}\n        onDrop={this.drop}\n        onClick={this.openFileInput}\n        className={uploadBlockClasses}\n        style={{ width: this.state.width, height: this.state.height }}\n        ref={this.componentRef}\n      >\n        <input type=\"file\" style={{ display: 'none' }} accept=\"image/*\" ref={this.fileUpload} onChange={this.setFile} />\n        <span className=\"upload-label\">Upload Image</span>\n        {this.props.image ? <img ref={this.currentImageRef} src={this.props.image.src} className=\"preview-image\" /> : null}\n      </div>\n    )\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAOA;;;;;AAEA;;;;;;;;;;;AAWA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AA2BA;AACA;AAAA;AACA;AADA;AAGA;AACA;AAhCA;AAkCA;AACA;AACA;AApCA;AAsCA;AACA;AAAA;AACA;AADA;AAGA;AACA;AA3CA;AA6CA;AACA;AAAA;AACA;AADA;AACA;AAEA;AACA;AAAA;AACA;AACA;AApDA;AAsDA;AACA;AACA;AAxDA;AA0DA;AACA;AAAA;AACA;AACA;AACA;AACA;AA7DA;AACA;AACA;AACA;AAGA;;;;AANA;AASA;AACA;AACA;AAbA;AAcA;AAEA;;;;;;;;;;AAMA;AACA;AACA;;;;AAwCA;;;;;;AAMA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;AAxJA;AACA;;;;;A","sourceRoot":""}