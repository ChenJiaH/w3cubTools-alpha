{"version":3,"file":"static/webpack/static/development/pages/meta-tag-generator.js.a84affc0fe0e97f6c226.hot-update.js","sources":["webpack:///./components/JsonschemaCustomUI.tsx","webpack:///./pages/meta-tag-generator.tsx"],"sourcesContent":["import React, {\n  Fragment,\n  Component,\n  useEffect,\n  useReducer,\n  useState\n} from \"react\";\nimport {\n  Pane,\n  TagInput,\n  SearchInput,\n  Button,\n  Textarea,\n  Select,\n  Checkbox,\n  TextInput\n} from \"evergreen-ui\";\nimport { useDropzone } from \"react-dropzone\";\n\nexport class KeyValueComponent extends React.Component<any, any> {\n  constructor(props) {\n    super(props);\n    this.state = { ...props.formData };\n  }\n\n  onChange(name) {\n    return event => {\n      this.setState(\n        {\n          [name]: event.target.value\n        },\n        () => this.props.onChange(this.state)\n      );\n    };\n  }\n\n  render() {\n    const { key, value } = this.state;\n    const props = this.props;\n    return (\n      <div style={{ marginRight: \"100px\" }}>\n        <TextInput\n          placeholder={props.uiSchema[\"key\"][\"ui:placeholder\"]}\n          marginRight={20}\n          width={\"40%\"}\n          value={key}\n          onChange={this.onChange(\"key\")}\n        />\n        <TextInput\n          placeholder={props.uiSchema[\"value\"][\"ui:placeholder\"]}\n          value={value}\n          width={\"40%\"}\n          onChange={this.onChange(\"value\")}\n        />\n      </div>\n    );\n  }\n}\n\nexport function KeyValueComponent2(props) {\n  const [state, setState] = useReducer((state, action) => {\n    return {\n      ...state,\n      ...action\n    };\n  }, props.formData);\n  const onChange = name => {\n    return event => {\n      setState({\n        [name]: event.target.value\n      });\n    };\n  };\n  useEffect(() => {\n    props.onChange(state);\n  }, [state]);\n  let keys = Object.keys(props.uiSchema);\n  keys = keys.filter(item => !(item == \"classNames\" || item == \"ui:field\"));\n  return (\n    <div style={{ marginRight: \"100px\" }}>\n      {keys.map(item => (\n        <TextInput\n          key={item}\n          placeholder={props.uiSchema[item][\"ui:placeholder\"] || item}\n          marginRight={20}\n          width={\"40%\"}\n          value={state[item]}\n          onChange={onChange(item)}\n        />\n      ))}\n    </div>\n  );\n}\n\nfunction DefaultArrayItem(props) {\n  return (\n    <div key={props.key} className={props.className}>\n      {props.hasRemove && (\n        <Button\n          appearance=\"primary\"\n          intent=\"danger\"\n          className=\"pull-right\"\n          disabled={props.disabled || props.readonly}\n          onClick={props.onDropIndexClick(props.index)}\n        >\n          Remove\n        </Button>\n      )}\n      {props.children}\n    </div>\n  );\n}\n\nexport function ArrayField(props) {\n  return (\n    <div>\n      <div style={{ fontWeight: \"bold\", marginBottom: \"5px\" }}>\n        {props.title}\n      </div>\n      {props.items.map(DefaultArrayItem)}\n      {props.canAdd && (\n        <div className=\"text-right\">\n          <Button appearance=\"primary\" onClick={props.onAddClick}>\n            Add\n          </Button>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport function InputField(props) {\n  return (\n    <TextInput\n      width={\"100%\"}\n      value={props.value}\n      required={props.required}\n      placeholder={props.placeholder}\n      height={props.options && props.options.height}\n      onFocus={event => event.target.select()}\n      onChange={event => props.onChange(event.target.value)}\n    />\n  );\n}\n\nexport function TagInputField(props) {\n  let values = [];\n  if (typeof props.value == \"string\") {\n    if (props.value) {\n      values = props.value.split(\",\");\n    }\n  }\n  return (\n    <TagInput\n      width={\"100%\"}\n      values={values}\n      required={props.required}\n      inputProps={{ placeholder: props.placeholder }}\n      height={props.options && props.options.height}\n      onChange={(values: any) => {\n        console.log(values);\n        props.onChange(values.join(\", \"));\n      }}\n    />\n  );\n}\n\nexport function SearchInputField(props) {\n  return (\n    <SearchInput\n      width={\"100%\"}\n      value={props.value}\n      required={props.required}\n      placeholder={props.placeholder}\n      height={props.options && props.options.height}\n      onChange={event => props.onChange(event.target.value)}\n    />\n  );\n}\n\nexport function CheckboxField(props) {\n  return (\n    <Checkbox\n      label={props.label}\n      checked={props.value}\n      onChange={() => props.onChange(!props.value)}\n    />\n  );\n}\n\nexport function SelectField(props) {\n  const {\n    schema,\n    id,\n    options,\n    value,\n    required,\n    disabled,\n    readonly,\n    multiple,\n    autofocus,\n    onChange,\n    onBlur,\n    onFocus,\n    placeholder\n  } = props;\n  const { enumOptions, enumDisabled } = options;\n  const emptyValue = multiple ? [] : \"\";\n  return (\n    <Select\n      width=\"100%\"\n      value={typeof value === \"undefined\" ? emptyValue : value}\n      onChange={event => props.onChange(event.target.value)}\n    >\n      {enumOptions.map(({ value, label }, i) => {\n        const disabled = enumDisabled && enumDisabled.indexOf(value) != -1;\n        return (\n          <option key={i} value={value} disabled={disabled}>\n            {label}\n          </option>\n        );\n      })}\n    </Select>\n  );\n}\n\nexport function TextAreaField(props) {\n  const usecount = props.options && props.options.count;\n  const [count, setCount] = useState((props.value || \"\").length);\n  return (\n    <div style={{ position: \"relative\" }}>\n      <Textarea\n        className=\"custom\"\n        value={props.value}\n        required={props.required}\n        placeholder={props.placeholder}\n        onChange={event => {\n          usecount && setCount(event.target.value.length);\n          props.onChange(event.target.value);\n        }}\n        onFocus={event => event.target.select()}\n      />\n      {usecount ? (\n        <span style={{ position: \"absolute\", right: \"10px\", bottom: \"10px\" }}>\n          {count}\n        </span>\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n}\n\nfunction addNameToDataURL(dataURL, name) {\n  return dataURL.replace(\";base64\", `;name=${encodeURIComponent(name)};base64`);\n}\n\nfunction processFile(file) {\n  const { name, size, type } = file;\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onerror = reject;\n    reader.onload = event => {\n      resolve({\n        // @ts-ignore\n        dataURL: addNameToDataURL(event.target.result, name),\n        name,\n        size,\n        type\n      });\n    };\n    reader.readAsDataURL(file);\n  });\n}\n\nfunction processFiles(files) {\n  return Promise.all([].map.call(files, processFile));\n}\n\nexport function FileField(props) {\n  const { multiple, onChange, options } = props;\n  const { acceptedFiles, getRootProps, getInputProps } = useDropzone({\n    multiple: multiple,\n    accept: options.accept || \"*\"\n  });\n  const [preview, setPreview] = useState(\"\");\n  const files = acceptedFiles.map((file: any) => (\n    <li key={file.path}>\n      {file.path} - {file.size} bytes\n    </li>\n  ));\n  useEffect(() => {\n    processFiles(acceptedFiles).then(filesInfo => {\n      const state = {\n        // @ts-ignore\n        values: filesInfo.map(fileInfo => fileInfo.dataURL),\n        filesInfo\n      };\n      if (multiple) {\n        onChange(state.values);\n      } else {\n        onChange(state.values[0]);\n        setPreview(state.values[0]);\n      }\n    });\n  }, [acceptedFiles]);\n  return (\n    <div className=\"ibox-section\" style={{ width: options.width }}>\n      <section className=\"dragcontainer\">\n        <div\n          style={{\n            backgroundImage: `url(${preview})`,\n            backgroundSize: \"cover\",\n            backgroundRepeat: \"no-repeat\",\n            backgroundPosition: \"center\"\n          }}\n          className=\"dropzone\"\n          {...getRootProps({ className: \"dropzone\" })}\n        >\n          <input {...getInputProps()} />\n          <p>Drag 'n' drop some files here, or click to select files</p>\n        </div>\n        {multiple && (\n          <aside>\n            <h4>Files</h4>\n            <ul>{files}</ul>\n          </aside>\n        )}\n      </section>\n      <style jsx global>{`\n        .ibox-section {\n          padding: 16px;\n          border: 1px #e8e8e8 solid;\n          border-radius: 3px;\n          width: 100%;\n        }\n        .dragcontainer {\n          display: flex;\n          flex-direction: column;\n          font-family: sans-serif;\n        }\n\n        .dragcontainer > p {\n          font-size: 1rem;\n        }\n\n        .dragcontainer > em {\n          font-size: 0.8rem;\n        }\n\n        .dragcontainer .dropzone {\n          flex: 1;\n          display: flex;\n          flex-direction: column;\n          align-items: center;\n          padding: 70px;\n          border-width: 5px;\n          border-radius: 2px;\n          border-color: #eeeeee;\n          border-style: dashed;\n          background-color: #fafafa;\n          color: #bdbdbd;\n          outline: none;\n          transition: border 0.24s ease-in-out;\n        }\n\n        .dragcontainer .dropzone:focus {\n          border-color: #2196f3;\n        }\n\n        .dragcontainer .dropzone.disabled {\n          opacity: 0.6;\n        }\n      `}</style>\n    </div>\n  );\n}\n","// <script src=\"https://unpkg.com/react-jsonschema-form/dist/react-jsonschema-form.js\"></script>\n\nimport React, { Fragment, Component, useReducer } from \"react\";\nimport { Pane, Textarea, SideSheet, Button } from \"evergreen-ui\";\nimport Form from \"react-jsonschema-form\";\nimport {\n  KeyValueComponent,\n  ArrayField,\n  CheckboxField,\n  InputField,\n  TagInputField,\n  SelectField,\n  SearchInputField,\n  TextAreaField,\n  FileField\n} from \"@components/JsonschemaCustomUI\";\nimport Mdloader from \"@components/Mdloader\";\nimport \"@styles/meta.less\";\n\nconst rootSchema = {\n  schema: {\n    type: \"object\",\n    properties: {\n      url: {\n        type: \"string\",\n        title: \"Site Url\"\n      },\n      title: {\n        type: \"string\",\n        title: \"Site Title\"\n      },\n      description: {\n        type: \"string\",\n        title: \"Site Description\"\n      },\n      author: {\n        type: \"string\",\n        title: \"Site Author\"\n      },\n      keywords: {\n        type: \"string\",\n        title: \"Site Keywords\"\n      },\n      viewport: {\n        type: \"string\",\n        title: \"Viewport\"\n      },\n      ua: {\n        type: \"string\",\n        title: \"X-UA-Compatible\"\n      },\n      image: {\n        type: \"string\",\n        format: \"data-url\",\n        title: \"Social Share Image ( Facebook, Twitter ... )\"\n      },\n      metas: {\n        type: \"array\",\n        title: \"Custom Meta Tags\",\n        items: {\n          type: \"object\",\n          properties: {\n            key: {\n              type: \"string\"\n            },\n            value: {\n              type: \"string\"\n            }\n          }\n        }\n      }\n    }\n  },\n  uiSchema: {\n    url: {\n      \"ui:widget\": InputField,\n      \"ui:placeholder\": \"Site url\",\n      \"ui:height\": 40\n    },\n    title: {\n      \"ui:widget\": InputField,\n      \"ui:placeholder\": \"Title must be within 70 Characters\",\n      \"ui:height\": 40\n    },\n    description: {\n      \"ui:widget\": TextAreaField,\n      \"ui:placeholder\": \"Description must be within 150 Characters\",\n      // \"ui:height\": 40,\n      \"ui:count\": true\n    },\n    author: {\n      \"ui:widget\": InputField,\n      \"ui:placeholder\": \"Website author\",\n      \"ui:height\": 40\n    },\n    keywords: {\n      \"ui:widget\": TagInputField,\n      \"ui:placeholder\": \"keywords1, keywords2, keywords3\",\n      \"ui:height\": 40\n    },\n    viewport: {\n      \"ui:widget\": InputField,\n      \"ui:placeholder\": \"meta content\",\n      \"ui:height\": 40\n    },\n    ua: {\n      \"ui:widget\": InputField,\n      \"ui:placeholder\": \"meta content\",\n      \"ui:height\": 40\n    },\n    image: {\n      \"ui:options\": {\n        width: \"780px\",\n        accept: \"image/*\"\n      }\n    },\n    metas: {\n      \"ui:ArrayFieldTemplate\": ArrayField,\n      \"ui:options\": {\n        orderable: false\n      },\n      \"ui:emptyValue\": [],\n      items: {\n        \"ui:field\": KeyValueComponent,\n        key: {\n          \"ui:placeholder\": \"name\",\n          \"ui:height\": 40,\n          \"ui:title\": false\n        },\n        value: {\n          \"ui:title\": false,\n          \"ui:height\": 40,\n          \"ui:placeholder\": \"content\"\n        }\n      }\n    }\n  },\n  formData: {\n    title:\n      \"W3cubTools | all free, collections of tools for developers and family\",\n    description:\n      \"Provide tools for developers and their family, to improve using HTML, Meta Tag, React, CSS, JavaScript, Color, SQL, SVG, GraphQL, JSON, Chinese, Japanese, Math and Game skills.\",\n    viewport: \"width=device-width, initial-scale=1.0\",\n    ua: \"IE=edge,chrome=1\",\n    keywords: \"\",\n    url: \"https://tools.w3cub.com/\",\n    author: \"W3cubTools\"\n  }\n};\n\nconst customWidgets = { CheckboxWidget: CheckboxField, FileWidget: FileField };\n\nexport default function() {\n  const [state, setState] = useReducer(\n    (state, action) => {\n      return {\n        ...state,\n        ...action\n      };\n    },\n    { ...rootSchema, isShown: false }\n  );\n\n  const getHeadersString = () => {\n    if (!formData.metas) {\n      return \"\";\n    }\n    var result = \"\";\n    for (var i = 0; i < formData.metas.length; i++) {\n      var header = formData.metas[i];\n      if (\n        header.key &&\n        header.key.length > 0 &&\n        header.value &&\n        header.value.length > 0\n      )\n        result += `<meta name=\"${header.key}\" content=\"${header.value}\">\\n`;\n    }\n    return result;\n  };\n  const getResult = ({ formData }) => {\n    const result = `\n    <meta charset=\"utf-8\">\n    <title>${formData.title}</title>\n    <meta name=\"title\" content=\"${formData.title}\">\n    <meta name=\"description\" content=\"${formData.description}\">\n    ${formData.keywords &&\n      `<meta name=\"keywords\" content=\"${formData.keywords}\">`}\n    ${formData.ua &&\n      `<meta http-equiv=\"X-UA-Compatible\" content=\"${formData.ua}\">`}\n    ${formData.author && `<meta name=\"author\" content=\"${formData.author}\">`}\n    ${formData.viewport &&\n      `<meta name=\"viewport\" content=\"${formData.viewport}\">`}\n    <meta name=\"renderer\" content=\"webkit\">\n    ${getHeadersString()}\n    <!-- Open Graph / Facebook -->\n    <meta property=\"og:type\" content=\"website\">\n    <meta property=\"og:url\" content=\"${formData.url}\">\n    <meta property=\"og:title\" content=${formData.title}\">\n    <meta property=\"og:description\" content=\"${formData.description}\">\n    <meta property=\"og:image\" content=\"https://tools.w3cub.com/assets/meta-tag-logo.png\">\n    <!-- Twitter -->\n    <meta property=\"twitter:card\" content=\"summary_large_image\">\n    <meta property=\"twitter:url\" content=\"${formData.url}\">\n    <meta property=\"twitter:title\" content=\"${formData.title}\">\n    <meta property=\"twitter:description\" content=\"${formData.description}\">\n    <meta property=\"twitter:image\" content=\"https://tools.w3cub.com/assets/meta-tag-logo.png\">\n    `;\n    setState({\n      result,\n      formData\n    });\n  };\n  const onSelect = (event: any) => {\n    event.target.select();\n  };\n\n  const { result, schema, uiSchema, formData } = state;\n  const formDataImage = formData.image || \"/static/logo.png\";\n\n  const previewContent = () => {\n    return (\n      <div className=\"metadata-preview\">\n        <div className=\"metadata__content\">\n          <div id=\"google\" className=\"metadata-group\">\n            <h4 className=\"metadata-group__title\">\n              <span>Google</span>\n            </h4>\n            <div className=\"meta-tag-google\">\n              <span className=\"meta-tag-google__title\">{formData.title}</span>\n              <div className=\"meta-tag-google__url\">\n                <span className=\"meta-tag-google__url-title \">\n                  {formData.url}\n                </span>\n                <span className=\"meta-tag-google__url-arrow\" />\n              </div>\n              <span className=\"meta-tag-google__description\">\n                {formData.description}\n              </span>\n            </div>\n          </div>\n          <div id=\"facebook\" className=\"metadata-group\">\n            <h4 className=\"metadata-group__title\">\n              <span>Facebook</span>\n            </h4>\n            <div className=\"meta-tag-facebook\">\n              <div\n                className=\"meta-tag-facebook__image\"\n                style={{\n                  backgroundImage: \"url(\" + formDataImage + \")\"\n                }}\n              />\n              <div className=\"meta-tag-facebook__text\">\n                <span className=\"meta-tag-facebook__link \">{formData.url}</span>\n                <div className=\"meta-tag-facebook__content\">\n                  <div style={{ marginTop: 5 }}>\n                    <div className=\"meta-tag-facebook__title\">\n                      {formData.title}\n                    </div>\n                  </div>\n                  <span className=\"meta-tag-facebook__description\">\n                    {formData.description}\n                  </span>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div id=\"twitter\" className=\"metadata-group\">\n            <h4 className=\"metadata-group__title\">\n              <span>Twitter</span>\n            </h4>\n            <div className=\"meta-tag-twitter\">\n              <div\n                className=\"meta-tag-twitter__image\"\n                style={{\n                  backgroundImage: \"url(\" + formDataImage + \")\"\n                }}\n              />\n              <div className=\"meta-tag-twitter__text\">\n                <span className=\"meta-tag-twitter__title\">\n                  {formData.title}\n                </span>\n                <span className=\"meta-tag-twitter__description\">\n                  {formData.description}\n                </span>\n                <span className=\"meta-tag-twitter__link \">{formData.url}</span>\n              </div>\n            </div>\n          </div>\n          <div id=\"linkedin\" className=\"metadata-group\">\n            <h4 className=\"metadata-group__title\">\n              <span>Linkedin</span>\n            </h4>\n            <div className=\"meta-tag-linkedin\">\n              <div\n                className=\"meta-tag-linkedin__image\"\n                style={{\n                  backgroundImage: \"url(\" + formDataImage + \")\"\n                }}\n              />\n              <div className=\"meta-tag-linkedin__text\">\n                <div className=\"meta-tag-linkedin__content\">\n                  <div className=\"meta-tag-linkedin__title\">\n                    {formData.title}\n                  </div>\n                  <span className=\"meta-tag-linkedin__link \">\n                    {formData.url}\n                  </span>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div id=\"pinterest\" className=\"metadata-group\">\n            <h4 className=\"metadata-group__title\">\n              <span>Pinterest</span>\n            </h4>\n            <div className=\"meta-tag-pinterest\">\n              <div className=\"meta-tag-pinterest__image\">\n                <img\n                  id=\"pinterest-image\"\n                  className=\"js-preview-img\"\n                  src={formDataImage}\n                />\n              </div>\n              <div className=\"meta-tag-pinterest__content\">\n                <div className=\"meta-tag-pinterest__title\">\n                  {formData.title}\n                </div>\n                <div className=\"meta-tag-pinterest__dots\">\n                  <div className=\"meta-tag-pinterest__dot\" />\n                  <div className=\"meta-tag-pinterest__dot\" />\n                  <div className=\"meta-tag-pinterest__dot\" />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div id=\"slack\" className=\"metadata-group\">\n            <h4 className=\"metadata-group__title\">\n              <span>Slack</span>\n            </h4>\n            <div className=\"meta-tag-slack\">\n              <div className=\"meta-tag-slack__bar\" />\n              <div className=\"meta-tag-slack__content\">\n                <div className=\"flex\">\n                  <img\n                    className=\"meta-tag-slack__favicon\"\n                    src={formDataImage}\n                  />{\" \"}\n                  <span className=\"meta-tag-slack__link\">\n                    {formData.author}\n                  </span>\n                </div>\n                <div className=\"meta-tag-slack__title\">{formData.title}</div>\n                <span className=\"meta-tag-slack__description\">\n                  {formData.description}\n                </span>\n                <div\n                  className=\"meta-tag-slack__image\"\n                  style={{\n                    backgroundImage: \"url(\" + formDataImage + \")\"\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  };\n  return (\n    <Fragment>\n      <SideSheet\n        isShown={state.isShown}\n        onCloseComplete={() => setState({ isShown: false })}\n      >\n        {previewContent}\n      </SideSheet>\n      <Pane\n        className=\"container\"\n        display=\"block\"\n        css={{\n          padding: \"0px 50px\",\n          margin: \"auto\"\n        }}\n      >\n        <h1>Meta Tag Generator</h1>\n        <Button\n          marginTop={20}\n          marginBottom={20}\n          height={100}\n          width=\"100%\"\n          fontSize=\"30px\"\n          display=\"block\"\n          onClick={() => {\n            setState({ isShown: true });\n          }}\n        >\n          PREVIEW\n        </Button>\n        <Form\n          schema={schema}\n          uiSchema={uiSchema}\n          formData={formData}\n          widgets={customWidgets}\n          onChange={getResult}\n        >\n          <Button\n            marginTop={20}\n            marginBottom={20}\n            height={100}\n            width=\"100%\"\n            fontSize=\"30px\"\n            display=\"block\"\n            onClick={() => {\n              setState({ isShown: true });\n            }}\n          >\n            PREVIEW\n          </Button>\n          <fieldset>\n            <label className=\"control-label\">Your Generated Meta Tags</label>\n            <Textarea\n              height={\"300px\"}\n              placeholder=\"result\"\n              value={result}\n              onChange={() => {}}\n              onClick={onSelect}\n            />\n          </fieldset>\n        </Form>\n      </Pane>\n      <Mdloader />\n    </Fragment>\n  );\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAOA;AAUA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAGA;AACA;AALA;AAAA;AAAA;AAMA;AACA;AAAA;AACA;AAIA;AAAA;AAEA;AACA;AAfA;AAAA;AAAA;AAiBA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AArCA;AACA;AADA;AAAA;AAwCA;AAAA;AAEA;AAIA;AANA;AAAA;AAAA;AACA;AAMA;AACA;AACA;AAGA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAYA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAEA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAilBA;AAAA;AAAA;AAqEA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxXA;AAEA;AACA;AACA;AACA;AAWA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAJA;AAFA;AAHA;AAlCA;AAFA;AAqDA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAFA;AADA;AAMA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAPA;AANA;AA3CA;AAgEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AATA;AAtHA;AAmIA;AAAA;AAAA;AAAA;AAEA;AAAA;AAGA;AAIA;AACA;AAPA;AADA;AAAA;AAAA;AACA;AAUA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAOA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AA2BA;AACA;AACA;AAFA;AAIA;AACA;AAAA;AACA;AACA;AACA;AAhEA;AAAA;AAAA;AAAA;AAkEA;AACA;AACA;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","sourceRoot":""}