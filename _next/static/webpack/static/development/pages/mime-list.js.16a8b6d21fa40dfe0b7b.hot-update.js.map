{"version":3,"file":"static/webpack/static/development/pages/mime-list.js.16a8b6d21fa40dfe0b7b.hot-update.js","sources":["webpack:///./pages/mime-list.tsx"],"sourcesContent":["import mimes from \"@constants/mime.json\"\nimport Mdloader from \"@components/Mdloader\";\n// @ts-ignore\nimport { SearchInput, Pane, Table } from \"evergreen-ui\";\nimport { useState, useEffect } from \"react\";\nimport { createFuzzyList } from \"@utils/fuzzyScore\";\n\nconst lists = createFuzzyList(mimes)\n\nexport default function () {\n  const [query, setQuery] = useState(\"\");\n  const [data, setData] = useState(lists);\n  useEffect(() => {\n    let sorted = [];\n    if (query) {\n      sorted = lists.filter(function (item) {\n        return (item._cachedScore = item.score(query)) >= 0.5;\n      }).sort(function (a, b) {\n        var as = a._cachedScore;\n        var bs = b._cachedScore;\n        return as > bs ? -1 : as == bs && a.i < b.i ? -1 : 1;\n      }).slice(0, 10)\n    } else {\n      sorted = lists;\n    }\n    setData(sorted);\n  }, [query]);\n  return (\n    <Pane margin=\"auto\" width=\"600px\" >\n      <SearchInput\n        placeholder=\"Typing something\"\n        onChange={e => {\n          setQuery(e.target.value);\n        }}\n        value={query}\n        width={\"600px\"}\n        marginX=\"auto\"\n        height={80}\n        marginBottom={10}\n      />\n      <table className=\"mimes\">\n        <tbody>\n          <tr>\n            <th className=\"separateColor\" style={{width: '30%'}}>Extension</th>\n            <th>Content-Type(Mime-Type)</th>\n          </tr>\n          {data.map((item, ix) => {\n            return (\n              <tr\n                key={ix}\n              >\n                <td>\n                  {item[0]}\n                </td>\n                <td >\n                  <code>\n                    {item[1]}\n                  </code>\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n      <style jsx>{`\n        .mimes {\n          font: 1em Monaco;\n          text-align: center;\n          border: 1px solid #ccc;\n          border-collapse: collapse;\n          border-spacing: 0;\n          width: 100%;\n        }\n        .mimes tr>th,.mimes tr> td {\n            border: 1px solid #ddd;\n            padding: 8px;\n            line-height: 1.428571429;\n            vertical-align: top;\n            border-top: 1px solid #ddd;\n        }\n        .mimes tr>th{\n            border-bottom-width: 2px\n        }\n        \n        .mimes tr:nth-of-type(odd) {\n            background-color: #f9f9f9\n        }\n        \n        .mimes >tr:hover {\n            background-color: #f5f5f5\n        }\n      `}</style>\n    </Pane>\n  );\n}\n\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAEA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAjCA;AAAA;AAAA;AAkEA;;;;A","sourceRoot":""}